experiment:
  # Basic info suitable for inclusion in eg an NWB file.
  experimenter:
    - Last, First M
    - Last, First Middle
  experiment_description: An PsychoPy demo experiment.
  institution: University of Fiction
  lab: The Fiction Lab
  keywords:
    - PsychoPy
    - tutorial
readers:
  wide_reader:
    class: pyramid.neutral_zone.readers.csv.WideCsvEventReader
    args:
      csv_file: data/690122_hello_pyramid_2024-05-09_15h57.06.136.csv
      first_row_is_header: true
      column_config:
        trial_started:
          column_selector: [trial.started]
          numeric: true
        pause_started:
          column_selector: [pause.started]
          numeric: true
        trial_wrt:
          column_selector: [cue.started]
          numeric: true
        prompt:
          column_selector: [prompt.started, prompt_text]
          numeric: false
        cue:
          column_selector: [cue.started, cue_text]
          numeric: false
        correct_target:
          column_selector: [trial.started, correct_target]
          numeric: false
        clicked_name:
          column_selector: [trial.stopped, mouse.clicked_name]
          numeric: false
          unpack_lists: true
        mouse_position:
          column_selector: [mouse.time, mouse.x, mouse.y]
          numeric: true
          unpack_lists: true
    extra_buffers:
      mouse_position:
        reader_result_name: mouse_position
        transformers:
          - class: pyramid.neutral_zone.transformers.standard_transformers.SparseSignal
            args:
              fill_with: null
              sample_frequency: 60
              channel_ids: [x, y]
    simulate_delay: True
trials:
  # How to delimit Trials in time, and how to align data within each trial.
  start_buffer: trial_started
  start_value: null
  wrt_buffer: trial_wrt
  wrt_value: null
  enhancers:
    - class: pyramid.trials.standard_enhancers.ExpressionEnhancer
      args:
        expression: clicked_name.first() == correct_target.first()
        value_name: correct
    - class: pyramid.trials.standard_enhancers.ExpressionEnhancer
      args:
        expression: clicked_name.start() - cue.start()
        value_name: reaction_time
    - class: pyramid.trials.standard_enhancers.ExpressionEnhancer
      args:
        expression: (cue.first() == '<---' and correct_target.first() == 'right') or (cue.first() == '--->' and correct_target.first() == 'left')
        value_name: miscue
plotters:
  # In "gui" mode, Pyramid will set up plotters and update each plotter after each trial.
  - class: pyramid.plotters.standard_plotters.BasicInfoPlotter
  - class: pyramid.plotters.standard_plotters.TextEventsPlotter
  - class: pyramid.plotters.standard_plotters.SignalChunksPlotter
    args:
      xmin: -1.0
      xmax: 5.0
      match_pattern: mouse_position
      ylabel: mouse position
